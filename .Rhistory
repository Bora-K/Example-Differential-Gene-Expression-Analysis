setwd("~/Github_Repos/Example-Differential-Gene-Expression-Analysis")
# Load the necessary libraries
library(tidyverse)
install.packages("tidyverse")
# Load the necessary libraries
library(tidyverse)
library(GEOquery)
library(dplyr)
BiocManager::install("GEOquery")
# Load the necessary libraries
library(GEOquery)
library(dplyr)
library(DESeq2)
BiocManager::install("DESeq2")
# Load the necessary libraries
library(GEOquery)
library(dplyr)
library(DESeq2)
library(purrr)
library(stringr)
# Download the GEO dataset
gse <- getGEO(GEO = "GSE223954", GSEMatrix = TRUE)
# Untar the raw counts
untar("data/GSE223954_RAW.tar", exdir = "data")
show(gse)
names (gse)
exprs(gse)
exprs(gse$GSE223954_series_matrix.txt.gz)
exprs(gse$GSE223954_series_matrix.txt.gz) %>% head
exprs(gse$GSE223954_series_matrix.txt.gz) %>% head
# Download the GEO dataset
gse <- getGEO(GEO = "GSE223954", GSEMatrix = TRUE)
# Untar the raw counts
untar("data/GSE223954_RAW.tar", exdir = "data")
# Get the filenames
files <- list.files("data", pattern = "\\.gz$", full.names = TRUE)
# Function to read a single file and rename the "Count" column to the GSM ID
# Function to read and rename "Count" to GSM ID (using base R renaming)
read_counts <- function(file) {
gsm_id <- str_extract(basename(file), "^GSM\\d+")  # Extract GSM ID
# Read the file and rename "Count" using base R (no dplyr::rename)
df <- read.delim(file, check.names = FALSE) %>%
dplyr::select(Id, Symbol, Count)
# Rename "Count" column to GSM ID using base R
colnames(df)[colnames(df) == "Count"] <- gsm_id
return(df)
}
# Read and merge all files
count_matrix <- files %>%
purrr::map(read_counts) %>%
purrr::reduce(full_join, by = c("Id", "Symbol"))
# Set row names to gene/transcript IDs
rownames(count_matrix) <- count_matrix$Id
count_matrix <- count_matrix[, !(colnames(count_matrix) %in% c("Id", "Symbol"))]
# Verify the cleaned matrix
head(count_matrix)
# Get the condition name
name_condition <- "characteristics_ch1.3"
# Get metadata
metadata <- pData(phenoData(gse[[1]])) %>%
rownames_to_column("GSM_ID") %>%
dplyr::select(GSM_ID, condition = name_condition)
metadata$condition <- str_remove(metadata$condition, "condition: ")
metadata$condition <- as.factor(metadata$condition)
# Read and merge all files
count_matrix <- files %>%
purrr::map(read_counts) %>%
purrr::reduce(full_join, by = c("Id", "Symbol"))
# Set row names to gene/transcript IDs
rownames(count_matrix) <- count_matrix$Id
count_matrix <- count_matrix[, !(colnames(count_matrix) %in% c("Id", "Symbol"))]
# Verify the cleaned matrix
head(count_matrix)
# Get the condition name
name_condition <- "characteristics_ch1.3"
# Get metadata
metadata <- pData(phenoData(gse[[1]])) %>%
rownames_to_column("GSM_ID") %>%
dplyr::select(GSM_ID, condition = name_condition)
# Load the necessary libraries
library(tidyverse)
insatll.packages("tidyverse")
install.packages("tidyverse")
# Load the necessary libraries
library(tidyverse)
